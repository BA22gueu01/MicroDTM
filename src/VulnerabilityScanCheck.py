import subprocess
import re

class VulnerabilityScan:

    def ssllabsCheck(self):
        # https://ihateregex.io/expr/ip/
        # Regex for an IPv4 address to find ssllabs grade
        regex = "(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}.*"
        output = subprocess.check_output(["/var/TrustCalculation/ssllabs-scan/ssllabs-scan-v3", "-grade", "zhaw.ch"])
        output = output.decode()

        grades = ['a', 'b', 'c']

        result = any(grade in re.search(regex, output.lower()).group(0) for grade in grades)
        print(output)

        if result:
            print("ssllabsCheck true")
        else:
            print("ssllabsCheck false")

        return 0

    def httpobsCheck(self):
        output = subprocess.check_output(["httpobs", "zhaw.ch"])
        output = output.decode()

        regex = "score.*"
        grades = ['[a]', '[b]', '[c]']

        result = any(grade in re.search(regex, output.lower()).group(0) for grade in grades)
        print(output)

        if result:
            print("httpobsCheck true")
        else:
            print("httpobsCheck false")

        return 0

    def niktoCheck(self):
        try:
            output = subprocess.Popen(["python", "/var/TrustCalculation/nikto/nikto-master/program/nikto.pl", "-h", "zhaw.ch"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            output = output.communicate()
        except subprocess.CalledProcessError as e:
            raise RuntimeError("command '{}' return with error (code {}): {}".format(e.cmd, e.returncode, e.output))

        print("niktoCheck true")

        print(output)
        return 0

    def getVulnerabilityScanGrade(self):
        niktoCheckGrade = self.niktoCheck()
        ssllabsCheckGrade = self.ssllabsCheck()
        httpobsCheckGrade = self.httpobsCheck()

        return httpobsCheckGrade + ssllabsCheckGrade + niktoCheckGrade
